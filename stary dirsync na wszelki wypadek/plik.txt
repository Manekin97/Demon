int DirSync(const char *srcPath, const char *destPath) {    //  teraz w sumie to nie jest potrzebne, wystarzcy rekurywne i dodac tam warunek do ifa
    DIR *source = NULL; 
    DIR *destination = NULL;  

    struct dirent *srcDirInfo = NULL; 
    struct dirent *destDirInfo = NULL;

    struct stat *srcFileInfo = NULL;
    struct stat *destFileInfo = NULL;

    Node *nodePtr = malloc(sizeof(struct node));

    source = opendir(srcPath);
    if (!source) {
        syslog(LOG_INFO, "opendir(): \"%s\" %s", srcPath, strerror(errno));
        return -1; 
    }
 
    destination = opendir(destPath); 
    if (!destination) {
        syslog(LOG_INFO, "opendir(): \"%s\" could not be opened properly", destPath); 
        return -1;         
    }

    List *srcDirFiles = GetAllfilenamesFromDir(source, true);
    List *destDirFiles = GetAllfilenamesFromDir(destination, true);

    Node *current = srcDirFiles->head;
    while(current != NULL) {
        if(FindAndCopy(destDirFiles, srcPath, destPath, current->filename)) {
            nodePtr = current->next;
            Remove(current->filename, srcDirFiles);
            current = nodePtr;                            
        }
        else {
            current = current->next;
        }
    }

    if(CopyAllFilesFromList(srcDirFiles, srcPath, destPath) == -1) {
        syslog(LOG_INFO, "CopyAllFilesFromList()");                                      
        return -1;
    }

    if(RemoveAllFilesFromList(destDirFiles, destPath) == -1) {
        syslog(LOG_INFO, "CopyAllFilesFromList()");        
        return -1;
    }

    if(closedir(source) == -1) {
        syslog(LOG_INFO, "Could not close \"%s\"", srcPath);
        return -1;
    }

    if(closedir(destination) == -1) {
        syslog(LOG_INFO, "Could not close \"%s\"", destPath);
        return -1;
    }

    free(srcFileInfo);
    free(destFileInfo);
    free(srcDirFiles);
    free(destDirFiles);    
    free(nodePtr);
}


List *GetAllfilenamesFromDir(DIR *dir, bool ignoreNonRegFiles) {    //  to potem zmienic, a najlepiej wypierdoliÄ‡, bo ne potrzebne
    List *list = InitList();
    struct dirent *dirInfo = NULL;

    if(ignoreNonRegFiles) {
        while ((dirInfo = readdir(dir)) != NULL) {
            if(dirInfo->d_type == DT_REG){
                Append(dirInfo->d_name, list);
            }
        }
    }
    else {
        while ((dirInfo = readdir(dir)) != NULL) {
            Append(dirInfo->d_name, list);
        }
    }   

    return list;
}
